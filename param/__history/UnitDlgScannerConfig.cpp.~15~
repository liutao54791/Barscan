//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "UnitDlgScannerConfig.h"
#include "UnitDlgGroupEdit.h"
#include "UnitDlgScannerEdit.h"
#include "UnitDlgBarcodeHeaderEdit.h"
#include "UnitDataModuleMain.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "cxButtons"
#pragma link "cxGraphics"
#pragma link "cxLookAndFeelPainters"
#pragma link "cxLookAndFeels"
#pragma link "dxSkinBlack"
#pragma link "dxSkinBlue"
#pragma link "dxSkinBlueprint"
#pragma link "dxSkinCaramel"
#pragma link "dxSkinCoffee"
#pragma link "dxSkinDarkRoom"
#pragma link "dxSkinDarkSide"
#pragma link "dxSkinDevExpressDarkStyle"
#pragma link "dxSkinDevExpressStyle"
#pragma link "dxSkinFoggy"
#pragma link "dxSkinGlassOceans"
#pragma link "dxSkinHighContrast"
#pragma link "dxSkiniMaginary"
#pragma link "dxSkinLilian"
#pragma link "dxSkinLiquidSky"
#pragma link "dxSkinLondonLiquidSky"
#pragma link "dxSkinMcSkin"
#pragma link "dxSkinMetropolis"
#pragma link "dxSkinMetropolisDark"
#pragma link "dxSkinMoneyTwins"
#pragma link "dxSkinOffice2007Black"
#pragma link "dxSkinOffice2007Blue"
#pragma link "dxSkinOffice2007Green"
#pragma link "dxSkinOffice2007Pink"
#pragma link "dxSkinOffice2007Silver"
#pragma link "dxSkinOffice2010Black"
#pragma link "dxSkinOffice2010Blue"
#pragma link "dxSkinOffice2010Silver"
#pragma link "dxSkinOffice2013DarkGray"
#pragma link "dxSkinOffice2013LightGray"
#pragma link "dxSkinOffice2013White"
#pragma link "dxSkinOffice2016Colorful"
#pragma link "dxSkinOffice2016Dark"
#pragma link "dxSkinPumpkin"
#pragma link "dxSkinsCore"
#pragma link "dxSkinsDefaultPainters"
#pragma link "dxSkinSeven"
#pragma link "dxSkinSevenClassic"
#pragma link "dxSkinSharp"
#pragma link "dxSkinSharpPlus"
#pragma link "dxSkinSilver"
#pragma link "dxSkinSpringTime"
#pragma link "dxSkinStardust"
#pragma link "dxSkinSummer2008"
#pragma link "dxSkinTheAsphaltWorld"
#pragma link "dxSkinValentine"
#pragma link "dxSkinVisualStudio2013Blue"
#pragma link "dxSkinVisualStudio2013Dark"
#pragma link "dxSkinVisualStudio2013Light"
#pragma link "dxSkinVS2010"
#pragma link "dxSkinWhiteprint"
#pragma link "dxSkinXmas2008Blue"
#pragma link "UnitDialogBase"
#pragma link "cxClasses"
#pragma link "cxControls"
#pragma link "cxCustomData"
#pragma link "cxData"
#pragma link "cxDataStorage"
#pragma link "cxDBData"
#pragma link "cxEdit"
#pragma link "cxFilter"
#pragma link "cxGrid"
#pragma link "cxGridCustomTableView"
#pragma link "cxGridCustomView"
#pragma link "cxGridDBTableView"
#pragma link "cxGridLevel"
#pragma link "cxGridTableView"
#pragma link "cxNavigator"
#pragma link "cxStyles"
#pragma link "dxLayoutContainer"
#pragma link "dxLayoutControl"
#pragma link "dxLayoutControlAdapters"
#pragma link "dxLayoutLookAndFeels"
#pragma link "dxSkinscxPCPainter"
#pragma resource "*.dfm"
TDlgScannerConfig *DlgScannerConfig;
//---------------------------------------------------------------------------
__fastcall TDlgScannerConfig::TDlgScannerConfig(TComponent* Owner)
	: TDialogBase(Owner)
{
	ADOQueryGroup->Connection = DataModuleMain->ADOConnectionMain;
	ADOQueryScanner->Connection = DataModuleMain->ADOConnectionMain;
	ADOQueryBarcode->Connection = DataModuleMain->ADOConnectionMain;
}
//---------------------------------------------------------------------------
void TDlgScannerConfig::LoadGroups()
{
	String strSQL = "SELECT GROUP_ID,GROUP_NAME,NOTE FROM SCANNER_GROUP \
		ORDER BY GROUP_ID";

	ADOQueryGroup->Close();
	ADOQueryGroup->SQL->Text = strSQL;
	ADOQueryGroup->Open();
}
//---------------------------------------------------------------------------
void TDlgScannerConfig::LoadScanners()
{
	String strSQL = "SELECT SCANNER_ID,GROUP_ID,SCANNER_TAG,SCANNER_NAME, \
		SCANNER_PARAM,NOTE \
		FROM SCANNER \
		ORDER BY GROUP_ID,SCANNER_ID";

	ADOQueryScanner->Close();
	ADOQueryScanner->SQL->Text = strSQL;
	ADOQueryScanner->Open();
}
//---------------------------------------------------------------------------
void TDlgScannerConfig::LoadBarcodes()
{
	String strSQL = "SELECT SCANNER_ID,HEADER_ID,HEADER_NAME,NOTE \
		FROM BARCODE_HEADER \
		ORDER BY SCANNER_ID,HEADER_ID";

	ADOQueryBarcode->Close();
	ADOQueryBarcode->SQL->Text = strSQL;
	ADOQueryBarcode->Open();
}
//---------------------------------------------------------------------------
void TDlgScannerConfig::LoadBarcodes(int nScannerId)
{
	ADOQueryBarcode->Filtered = false;
	ADOQueryBarcode->Filter = "SCANNER_ID = " + String(nScannerId);
	ADOQueryBarcode->Filtered = true;
}
//---------------------------------------------------------------------------
void __fastcall TDlgScannerConfig::cxButtonAddScannerClick(TObject *Sender)
{
	if (cxGridScanner->FocusedView == cxGridScannerDBTableViewGroup)
	{
		TDlgGroupEdit* pdlgGroup = new TDlgGroupEdit(NULL);

		SCANNER_GROUP sgGroup;
		sgGroup.nGroupIndex = 0;

		pdlgGroup->SetGroupInfo(sgGroup);
		if (pdlgGroup->ShowModal() == mrOk)
		{
			LoadGroups();
		}
		delete pdlgGroup;
	}
	else
	{
		TDlgScannerEdit* pdlgScanner = new TDlgScannerEdit(NULL);

		SCANNER sScanner;
		sScanner.nScannerIndex = 0;
		TcxGridDBDataController* pdcControl = cxGridScannerDBTableViewGroup->DataController;
		int nRowIndex = pdcControl->FocusedRowIndex;
		int nColIndex = cxGridScannerDBTableViewGroupGROUP_ID->Index;
		sScanner.nGroupIndex = pdcControl->DisplayTexts[nRowIndex][nColIndex].ToInt();
		nColIndex = cxGridScannerDBTableViewGroupGROUP_NAME->Index;
		sScanner.strGroupName = pdcControl->DisplayTexts[nRowIndex][nColIndex];

		pdlgScanner->SetScannerInfo(sScanner);
		if (pdlgScanner->ShowModal() == mrOk)
		{
			LoadScanners();
		}
		delete pdlgScanner;
	}
}

//---------------------------------------------------------------------------

void __fastcall TDlgScannerConfig::cxButtonEditScannerClick(TObject *Sender)
{
	if (cxGridScanner->FocusedView == cxGridScannerDBTableViewGroup)
	{
		TDlgGroupEdit* pdlgGroup = new TDlgGroupEdit(NULL);

		SCANNER_GROUP sgGroup;
		TcxGridDBDataController* pdcControl = cxGridScannerDBTableViewGroup->DataController;
		int nRowIndex = pdcControl->FocusedRowIndex;
		int nColIndex = cxGridScannerDBTableViewGroupGROUP_ID->Index;
		sgGroup.nGroupIndex = pdcControl->DisplayTexts[nRowIndex][nColIndex].ToInt();
		nColIndex = cxGridScannerDBTableViewGroupGROUP_NAME->Index;
		sgGroup.strGroupName = pdcControl->DisplayTexts[nRowIndex][nColIndex];
		nColIndex = cxGridScannerDBTableViewGroupNOTE->Index;
		sgGroup.strNote = pdcControl->DisplayTexts[nRowIndex][nColIndex];

		pdlgGroup->SetGroupInfo(sgGroup);
		if (pdlgGroup->ShowModal() == mrOk)
		{
			LoadGroups();
		}
		delete pdlgGroup;
	}
	else
	{
		TDlgScannerEdit* pdlgScanner = new TDlgScannerEdit(NULL);

		SCANNER sScanner;
		sScanner.nScannerIndex = 0;
		TcxGridDBDataController* pdcControl = cxGridScannerDBTableViewGroup->DataController;
		int nRowIndex = pdcControl->FocusedRowIndex;
		int nColIndex = cxGridScannerDBTableViewGroupGROUP_ID->Index;
		sScanner.nGroupIndex = pdcControl->DisplayTexts[nRowIndex][nColIndex].ToInt();
		nColIndex = cxGridScannerDBTableViewGroupGROUP_NAME->Index;
		sScanner.strGroupName = pdcControl->DisplayTexts[nRowIndex][nColIndex];

		pdcControl = cxGridScannerDBTableViewScanner->DataController;
		nRowIndex = pdcControl->FocusedRowIndex;
		nColIndex = cxGridScannerDBTableViewScannerSCANNER_ID->Index;
		sScanner.nScannerIndex = pdcControl->DisplayTexts[nRowIndex][nColIndex].ToInt();
		nColIndex = cxGridScannerDBTableViewScannerSCANNER_TAG->Index;
		sScanner.nScannerTag = pdcControl->DisplayTexts[nRowIndex][nColIndex].ToInt();
		nColIndex = cxGridScannerDBTableViewScannerSCANNER_NAME->Index;
		sScanner.strScannerName = pdcControl->DisplayTexts[nRowIndex][nColIndex];
		nColIndex = cxGridScannerDBTableViewScannerSCANNER_PARAM->Index;
		sScanner.strScannerParam = pdcControl->DisplayTexts[nRowIndex][nColIndex];
		nColIndex = cxGridScannerDBTableViewScannerNOTE->Index;
		sScanner.strNote = pdcControl->DisplayTexts[nRowIndex][nColIndex];

		pdlgScanner->SetScannerInfo(sScanner);
		if (pdlgScanner->ShowModal() == mrOk)
		{
			LoadScanners();
		}
		delete pdlgScanner;
	}
}
//---------------------------------------------------------------------------

void __fastcall TDlgScannerConfig::FormShow(TObject *Sender)
{
	LoadGroups();
	LoadScanners();
}
//---------------------------------------------------------------------------
