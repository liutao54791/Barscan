//---------------------------------------------------------------------------

#pragma hdrstop

#include "UnitBarcodeScanner.h"

//---------------------------------------------------------------------------
#pragma package(smart_init)

//---------------------------------------------------------------------------
TBarcodeScanner::TBarcodeScanner() : m_hWnd(NULL)
{
	m_pslBarcodeList = new TStringList;
	m_nScannedCount = 0;
}
//---------------------------------------------------------------------------
TBarcodeScanner::~TBarcodeScanner()
{
	delete m_pslBarcodeList;
}
//---------------------------------------------------------------------------
int TBarcodeScanner::Init()
{
	//OpenScanners();
}
//---------------------------------------------------------------------------
int TBarcodeScanner::Scan()
{
	StartScanBarcode();
}
//---------------------------------------------------------------------------
void TBarcodeScanner::Stop()
{
	CloseScanners();
}
//---------------------------------------------------------------------------
void TBarcodeScanner::SetHandle(HWND hWnd)
{
	m_hWnd = hWnd;
}
//---------------------------------------------------------------------------
void TBarcodeScanner::UploadBarcode(BARCODE bBarcode)
{
	if (m_hWnd)
	{
		::SendMessageA(m_hWnd,WM_BARCODE_SCANNED,(WPARAM)this,(LPARAM)&bBarcode);
	}
}

//---------------------------------------------------------------------------
bool TBarcodeScanner::IsValidBarcode(String strBarcode,int nIndex)
{
	return strBarcode.Length() == m_vBarcodeLength[nIndex];
}

//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
THoneyWellBarcodeScanner::THoneyWellBarcodeScanner()
{
	m_pcsMutex = new TCriticalSection();
	m_plSerialPortList = new TList;
}
//---------------------------------------------------------------------------
THoneyWellBarcodeScanner::~THoneyWellBarcodeScanner()
{
	CloseScanners();

	ClearScanners();

	delete m_plSerialPortList;

	delete m_pcsMutex;
}
//---------------------------------------------------------------------------
void THoneyWellBarcodeScanner::AddScanner(SCANNER_INFO siScanner)
{
   /*	ISerialPort* pspSerialPort = NULL;
	HRESULT hrRet = ::CoCreateInstance(CLSID_SerialPort,
		NULL,
		CLSCTX_INPROC_SERVER,
		IID_ISerialPort,
		(void**)&pspSerialPort);  */
	String Parameter = siScanner.strParam;

	TCOMISerialPort pspSerialPort = CoSerialPort::Create();

	AnsiString str;
	TStringList* lstLine = new TStringList;
	str = StringReplace(Parameter,".", "\r\n", TReplaceFlags() << rfReplaceAll);
	lstLine->Text = str;
	
	pspSerialPort->Tag = siScanner.nTag;
	//TODO: parameter
	pspSerialPort->PortId     =  1;   //siScanner.nTag
	pspSerialPort->Baudrate   =  9600;//lstLine->Strings[0].ToInt();
	pspSerialPort->ByteSize   =  8;	  //lstLine->Strings[1].ToInt();
	pspSerialPort->StopBits   =  1;   //lstLine->Strings[2].ToInt();
	pspSerialPort->ParityMode =  __MIDL_ISerialPort_0001::pmNoParity;   //lstLine->Strings[3].ToInt();
	HRESULT hs = pspSerialPort->Open();
	m_plSerialPortList->Add(pspSerialPort);

	delete lstLine;

	TSerialPortEventSink* pesEventSink = new TSerialPortEventSink;
	pesEventSink->OnRead = OnRead;
	pesEventSink->Connect(pspSerialPort);
	m_vEventSink.push_back(pesEventSink);
}
//---------------------------------------------------------------------------
void THoneyWellBarcodeScanner::RemoveScanner(SCANNER_INFO siScanner)
{
	for (int i = 0; i < m_plSerialPortList->Count; ++i)
	{
		ISerialPort* pspSerialPort = (ISerialPort*)m_plSerialPortList->Items[i];
		if (pspSerialPort->Tag != siScanner.nTag)
			continue;

        m_vEventSink.at(i)->DisConnect();
		delete m_vEventSink.at(i);
		m_vEventSink.at(i) = NULL;

		pspSerialPort->Release();
		m_plSerialPortList->Delete(i);

		break;
	}
}
//---------------------------------------------------------------------------
void THoneyWellBarcodeScanner::ClearScanners()
{
	for (int i = 0; i < m_plSerialPortList->Count; ++i)
	{
        m_vEventSink.at(i)->DisConnect();
		delete m_vEventSink.at(i);
		m_vEventSink.at(i) = NULL;

		ISerialPort* pspSerialPort = (ISerialPort*)m_plSerialPortList->Items[i];
		pspSerialPort->Release();
	}

	m_plSerialPortList->Clear();
	m_vEventSink.clear();
}
//---------------------------------------------------------------------------
int THoneyWellBarcodeScanner::OpenScanners()
{
	CloseScanners();

	for (int i = 0;i < m_plSerialPortList->Count; i++)
	{
		ISerialPort* pscComm = (ISerialPort*)m_plSerialPortList->Items[i];
		//open
		HRESULT hs =  pscComm->Open();
		hs = 11;
	}
	return 0;
}
//---------------------------------------------------------------------------
void THoneyWellBarcodeScanner::CloseScanners()
{
	for (int i = 0;i < m_plSerialPortList->Count; i++)
	{
		ISerialPort* pscComm = (ISerialPort*)m_plSerialPortList->Items[i];
		//Close
		pscComm->Close();
	}
}
//---------------------------------------------------------------------------
void THoneyWellBarcodeScanner::StartScanBarcode(int nIndex)
{
	ISerialPort* pscComm = (ISerialPort*)m_plSerialPortList->Items[nIndex];
	unsigned char CtrlScanBuff[10] = {0};
	CtrlScanBuff[0] = 0x16;
	CtrlScanBuff[1] = 0x54;
	CtrlScanBuff[2] = 0x0D;

	pscComm->SendBuffer(CtrlScanBuff,3);   //16 54 0DÉ¨Ãè£¬16 55 0DÍ£Ö¹
}
//---------------------------------------------------------------------------
void THoneyWellBarcodeScanner::StartScanBarcode()
{
	for (int i = 0; i < m_plSerialPortList->Count; i++)
	{
		ISerialPort* pscComm = (ISerialPort*)m_plSerialPortList->Items[i];
		unsigned char CtrlScanBuff[10] = {0};
		CtrlScanBuff[0] = 0x16;
		CtrlScanBuff[1] = 0x54;
		CtrlScanBuff[2] = 0x0D;

		pscComm->SendBuffer(CtrlScanBuff,3);   //16 54 0DÉ¨Ãè£¬16 55 0DÍ£Ö¹
	}
}

//---------------------------------------------------------------------------
void THoneyWellBarcodeScanner::OnRead(IUnknown* Sender,BYTE* pbData,ULONG nLength)
{
	ISerialPortPtr pSender = Sender;

	ISerialPort* pscComm = NULL;
	int nIndex = 0;
	for (nIndex = 0; nIndex < m_plSerialPortList->Count; nIndex++)
	{
		ISerialPort* pscComm = (ISerialPort*)m_plSerialPortList->Items[nIndex];
		if (pscComm->Tag == pSender->Tag)
			break;
		else
			pscComm = NULL;
	}

	if (pscComm == NULL)
	{
		return;
	}

	if (nLength != m_vBarcodeLength[nIndex])
	{
		StartScanBarcode(nIndex);
		return;
	}
	String strBarcode( (char*)pbData,nLength);
	m_pslBarcodeList->Strings[nIndex] = strBarcode;

	m_pcsMutex->Acquire();

	try
	{
		//csMutex
		m_nScannedCount++;
		BARCODE bBarcode;
		bBarcode.strValue = strBarcode;
		bBarcode.nTag = pscComm->Tag;
		UploadBarcode(bBarcode);
	}
	__finally
	{
		m_pcsMutex->Release();
	}
}
